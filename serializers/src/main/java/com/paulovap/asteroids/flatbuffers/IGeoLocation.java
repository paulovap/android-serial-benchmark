// automatically generated by the FlatBuffers compiler, do not modify

package com.paulovap.asteroids.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class IGeoLocation extends Table {
  public static IGeoLocation getRootAsIGeoLocation(ByteBuffer _bb) { return getRootAsIGeoLocation(_bb, new IGeoLocation()); }
  public static IGeoLocation getRootAsIGeoLocation(ByteBuffer _bb, IGeoLocation obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public IGeoLocation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String type() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer typeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public ICoordinates coordinates() { return coordinates(new ICoordinates()); }
  public ICoordinates coordinates(ICoordinates obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createIGeoLocation(FlatBufferBuilder builder,
      int typeOffset,
      int coordinatesOffset) {
    builder.startObject(2);
    IGeoLocation.addCoordinates(builder, coordinatesOffset);
    IGeoLocation.addType(builder, typeOffset);
    return IGeoLocation.endIGeoLocation(builder);
  }

  public static void startIGeoLocation(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(0, typeOffset, 0); }
  public static void addCoordinates(FlatBufferBuilder builder, int coordinatesOffset) { builder.addOffset(1, coordinatesOffset, 0); }
  public static int endIGeoLocation(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

