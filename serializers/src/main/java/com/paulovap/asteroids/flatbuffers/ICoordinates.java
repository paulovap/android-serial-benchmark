// automatically generated by the FlatBuffers compiler, do not modify

package com.paulovap.asteroids.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ICoordinates extends Table {
  public static ICoordinates getRootAsICoordinates(ByteBuffer _bb) { return getRootAsICoordinates(_bb, new ICoordinates()); }
  public static ICoordinates getRootAsICoordinates(ByteBuffer _bb, ICoordinates obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public ICoordinates __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double lat() { int o = __offset(4); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double lon() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createICoordinates(FlatBufferBuilder builder,
      double lat,
      double lon) {
    builder.startObject(2);
    ICoordinates.addLon(builder, lon);
    ICoordinates.addLat(builder, lat);
    return ICoordinates.endICoordinates(builder);
  }

  public static void startICoordinates(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addLat(FlatBufferBuilder builder, double lat) { builder.addDouble(0, lat, 0.0); }
  public static void addLon(FlatBufferBuilder builder, double lon) { builder.addDouble(1, lon, 0.0); }
  public static int endICoordinates(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

